buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.723'
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id 'maven-publish'
}

import com.amazonaws.auth.profile.ProfileCredentialsProvider

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


asciidoctor {
    dependsOn test
}

jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

asciidoctor {
    sourceDir 'src/docs/asciidoc'
    attributes 'snippets': file('build/generated-snippets')
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.5.5'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webmvc-core', version: '1.5.5'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-data-rest', version: '1.5.5'
    testImplementation(platform('org.junit:junit-bom:5.7.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    compile 'io.minio:minio:8.1.0'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

publishing {
    repositories {
        maven {
            url "s3://api-document"
            credentials(AwsCredentials) {
                def awsCredentials = new ProfileCredentialsProvider().credentials
                awsCredentials.println()
                accessKey awsCredentials.getAWSAccessKeyId()
                secretKey awsCredentials.getAWSSecretKey()
            }
        }
    }

    publications {
        documents(MavenPublication) {
            artifact('build/asciidoc/html5/api-sample.html')
        }
    }

}